[
  {
    "ContainingType": "BackendService.Controllers.BrandController",
    "Method": "GetBrands",
    "RelativePath": "api/Brand/Brands",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.BrandController",
    "Method": "CreateBrand",
    "RelativePath": "api/Brand/Brands",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "brandVM",
        "Type": "BackendService.ViewModels.BrandVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.BrandController",
    "Method": "GetBrand",
    "RelativePath": "api/Brand/Brands/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.BrandController",
    "Method": "UpdateBrand",
    "RelativePath": "api/Brand/Brands/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "brandVM",
        "Type": "BackendService.ViewModels.BrandVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.BrandController",
    "Method": "UpdatePartialBrand",
    "RelativePath": "api/Brand/Brands/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "patchDoc",
        "Type": "Microsoft.AspNetCore.JsonPatch.JsonPatchDocument\u00601[[BackendService.ViewModels.BrandVM, BackendService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.BrandController",
    "Method": "DeleteBrand",
    "RelativePath": "api/Brand/Brands/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.ColorController",
    "Method": "CreateColor",
    "RelativePath": "api/Color/Colors",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "colorVM",
        "Type": "BackendService.ViewModels.VersionColorVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.ColorController",
    "Method": "GetColor",
    "RelativePath": "api/Color/Colors/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.ColorController",
    "Method": "UpdateColor",
    "RelativePath": "api/Color/Colors/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "colorVM",
        "Type": "BackendService.ViewModels.VersionColorVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.ColorController",
    "Method": "DeleteColor",
    "RelativePath": "api/Color/Colors/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.ImageController",
    "Method": "GetAllImages",
    "RelativePath": "api/Image/GetAllImages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.LibraryController",
    "Method": "CreateLibrary",
    "RelativePath": "api/Library/Libraries",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "libraryVM",
        "Type": "BackendService.ViewModels.LibraryVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.LibraryController",
    "Method": "GetLibrary",
    "RelativePath": "api/Library/Libraries/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.LibraryController",
    "Method": "DeleteLibrary",
    "RelativePath": "api/Library/Libraries/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.LibraryController",
    "Method": "UpdateLibrary",
    "RelativePath": "api/Library/Libraries/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "libraryVM",
        "Type": "BackendService.ViewModels.LibraryVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.LibraryController",
    "Method": "DeleteImagesLibrary",
    "RelativePath": "api/Library/ResetLibraries/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.MotoController",
    "Method": "GetMotos",
    "RelativePath": "api/Moto/Motos",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.MotoController",
    "Method": "CreateMoto",
    "RelativePath": "api/Moto/Motos",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "motoVM",
        "Type": "BackendService.ViewModels.MotoVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.MotoController",
    "Method": "GetMoto",
    "RelativePath": "api/Moto/Motos/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.MotoController",
    "Method": "UpdateMoto",
    "RelativePath": "api/Moto/Motos/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "motoVM",
        "Type": "BackendService.ViewModels.MotoVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.MotoController",
    "Method": "DeleteMoto",
    "RelativePath": "api/Moto/Motos/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.TypeController",
    "Method": "GetMotoTypes",
    "RelativePath": "api/Type/Types",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.TypeController",
    "Method": "CreateMotoType",
    "RelativePath": "api/Type/Types",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "typeVM",
        "Type": "BackendService.ViewModels.TypeVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.TypeController",
    "Method": "GetMotoType",
    "RelativePath": "api/Type/Types/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.TypeController",
    "Method": "UpdateMotoType",
    "RelativePath": "api/Type/Types/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "typeVM",
        "Type": "BackendService.ViewModels.TypeVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.TypeController",
    "Method": "UpdatePartialMotoType",
    "RelativePath": "api/Type/Types/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "patchDoc",
        "Type": "Microsoft.AspNetCore.JsonPatch.JsonPatchDocument\u00601[[BackendService.ViewModels.TypeVM, BackendService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.TypeController",
    "Method": "DeleteMotoType",
    "RelativePath": "api/Type/Types/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.UploadController",
    "Method": "UploadLibraryFiles",
    "RelativePath": "api/Upload/LibraryImages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.UploadController",
    "Method": "UploadMotoFiles",
    "RelativePath": "api/Upload/MotoImages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.UploadController",
    "Method": "UploadVersionFiles",
    "RelativePath": "api/Upload/VersionImages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.VersionController",
    "Method": "GetVersions",
    "RelativePath": "api/Version/{motoID}/Versions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "motoID",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.VersionController",
    "Method": "CreateVersion",
    "RelativePath": "api/Version/Versions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "versionVM",
        "Type": "BackendService.ViewModels.VersionVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.VersionController",
    "Method": "GetVersion",
    "RelativePath": "api/Version/Versions/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.VersionController",
    "Method": "UpdateVersion",
    "RelativePath": "api/Version/Versions/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "versionVM",
        "Type": "BackendService.ViewModels.VersionVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.VersionController",
    "Method": "DeleteVersion",
    "RelativePath": "api/Version/Versions/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BackendService.Controllers.VersionImageController",
    "Method": "CreateImage",
    "RelativePath": "api/VersionImage/VersionImages",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "versionImage",
        "Type": "BackendService.ViewModels.VersionImageVM",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]